---
import Menu from '../components/Menu.astro'

interface Props {
  title: string
  description: string
  url: string
  className?: string
}

const { title, description, url, className } = Astro.props
---

<!doctype html>
<html lang="en" class={className}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Menu currentUrl={url} className={className} />
    <div class="contents">
      <main class="page">
        <slot />
      </main>
    </div>
  </body>
</html>
<style>
  :root {
    --theme-color: #1e90ff;
    --theme-color-highlight: #4ba5ff;
    --color: #4d4d4d;
    --border-color: #dcdcdc;
    --header-background-color: #f5f5f5;
    --header-color: #717171;
    --sub-menu-background: #e3e3e3;
    --code-background: #f5f5f5;
    --margin: 10px;
    --main-width: 800px;
  }

  html {
    font-family: system-ui, sans-serif;
    color: var(--color);
    width: 100%;
    height: 100%;
  }

  body {
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;

    .contents {
      flex: 1;
      display: flex;
      flex-direction: column;
      overflow: auto;
      align-items: center;
      box-sizing: border-box;

      main {
        width: 100%;
        max-width: var(--main-width);
        padding: var(--margin);
        box-sizing: border-box;
      }
    }
  }

  html.playground {
    background: var(--sub-menu-background);

    .contents {
      main {
        flex: 1;
        width: 100%;
        max-width: none;
        padding: 0;
        display: flex;
      }
    }
  }

  :global(table) {
    border-collapse: collapse;

    th,
    td {
      border: 1px solid var(--border-color);
      padding: 5px;
      vertical-align: top;
      text-align: left;
    }

    th {
      background: var(--header-background-color);
      color: var(--header-color);
      font-weight: inherit;
      white-space: nowrap;
    }
  }

  :global(.action-button) {
    background: var(--theme-color);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 3px;
    text-decoration: none;

    &:hover {
      background: var(--theme-color-highlight);
    }
  }

  :global(pre) {
    background: var(--code-background);
    padding: 5px;
    overflow: auto;

    code {
      padding: 0;
    }
  }

  :global(code) {
    background: var(--code-background);
    padding: 2px;
  }
</style>
